<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>UPLOAD</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH"
            crossorigin="anonymous"
        />
        <script
            src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz"
            crossorigin="anonymous"
        ></script>
        <style>
            * {
                margin: 0;
                font-family: Arial, Helvetica, sans-serif;
            }

            header {
                display: flex;
                justify-content: start;
                align-items: center;
                height: 40px;
                background-color: rgb(135, 29, 97);
                color: white;
                padding-inline: 20px;
            }

            header > div {
                font-size: 24px;
                font-weight: bold;
            }

            main {
                box-sizing: border-box;
                padding: 20px;
            }
        </style>
    </head>
    <body>
        <header><div>PPM UPLOAD</div></header>
        <main>
            <form action="/api/upload" enctype="multipart/form-data" method="post">
                <div class="mb-3">
                    <label for="song" class="form-label">Song</label>
                    <input type="text" class="form-control" id="song" name="song" required />
                </div>
                <div class="mb-3">
                    <label for="album" class="form-label">Album</label>
                    <select class="form-select" id="album" name="album">
                        <% albums.forEach(album => { %>
                        <option value="<%= album.id %>" data-artist="<%= album.artist.id %>">
                            <%= album.title %>
                        </option>
                        <% }) %>
                        <option value="new">Create new</option>
                    </select>
                </div>
                <div class="mb-3 d-none" id="new-album-title-input-container">
                    <label for="newAlbumTitle" class="form-label">New Album</label>
                    <input
                        type="text"
                        class="form-control"
                        id="newAlbumTitle"
                        name="newAlbumTitle"
                    />
                </div>
                <div class="mb-3 d-none" id="new-album-year-input-container">
                    <label for="newAlbumYear" class="form-label">Year</label>
                    <input
                        type="number"
                        class="form-control"
                        id="newAlbumYear"
                        name="newAlbumYear"
                    />
                </div>
                <div class="mb-3 d-none" id="new-album-cover-input-container">
                    <label for="newAlbumCover" class="form-label"
                        >Album Cover (JPEG, PNG, WEBP)</label
                    >
                    <input
                        type="file"
                        class="form-control"
                        id="newAlbumCover"
                        name="newAlbumCover"
                    />
                </div>
                <div class="mb-3">
                    <label for="artist" class="form-label">Artist</label>
                    <select class="form-select" id="artist" name="artist">
                        <% artists.forEach(artist => { %>
                        <option value="<%= artist.id %>"><%= artist.name %></option>
                        <% }) %>
                        <option value="new">Create new</option>
                    </select>
                </div>
                <input type="hidden" name="artist" id="artistHidden" disabled />
                <div class="mb-3 d-none" id="new-artist-name-input-container">
                    <label for="newArtistName" class="form-label">New Artist</label>
                    <input
                        type="text"
                        class="form-control"
                        id="newArtistName"
                        name="newArtistName"
                    />
                </div>
                <div class="mb-3">
                    <label for="songCover" class="form-label">Song Cover (JPEG, PNG, WEBP)</label>
                    <input
                        type="file"
                        class="form-control"
                        id="songCover"
                        name="songCover"
                        required
                    />
                </div>
                <div class="mb-3">
                    <label for="source" class="form-label"
                        >Audio Source (MP3, WAV, FLAC, OGG, AAC)</label
                    >
                    <input type="file" class="form-control" id="source" name="source" required />
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </main>
        <script>
            const albumHiddenField = ["title", "year", "cover"];
            const artistHiddenField = ["name"];

            const albumSelect = document.querySelector('select[name="album"]');
            const artistSelect = document.querySelector('select[name="artist"]');
            const artistHiddenInput = document.querySelector('input[name="artist"]');

            const albumNewContainers = albumHiddenField.map((e) =>
                document.querySelector(`div#new-album-${e}-input-container`)
            );
            const albumNewFields = albumHiddenField.map((e) =>
                document.querySelector(`div#new-album-${e}-input-container > input`)
            );

            const artistNewContainers = artistHiddenField.map((e) =>
                document.querySelector(`div#new-artist-${e}-input-container`)
            );
            const artistNewFields = artistHiddenField.map((e) =>
                document.querySelector(`div#new-artist-${e}-input-container > input`)
            );

            function handleAlbumSelect() {
                if (albumSelect.value == "new") {
                    albumNewContainers.forEach((e) => e.classList.remove("d-none"));
                    albumNewFields.forEach((e) => {
                        e.disabled = false;
                        e.required = e.id != "newAlbumCover";
                    });
                    artistSelect.value = "new";
                    artistSelect.disabled = false;
                    artistHiddenInput.value = "";
                    artistHiddenInput.disabled = true;
                } else {
                    albumNewContainers.forEach((e) => {
                        if (!e.classList.contains("d-none")) {
                            e.classList.add("d-none");
                        }
                    });
                    albumNewFields.forEach((e) => {
                        e.disabled = true;
                        e.required = false;
                    });

                    const artistFromAlbum = document.querySelectorAll(
                        'select[name="album"] > option'
                    )[albumSelect.selectedIndex].dataset.artist;
                    artistSelect.value = artistFromAlbum;
                    artistSelect.disabled = true;
                    artistHiddenInput.value = artistFromAlbum;
                    artistHiddenInput.disabled = false;
                }

                
                handleArtistSelect();
            }

            function handleArtistSelect() {
                if (artistSelect.value == "new") {
                    artistNewContainers.forEach((e) => e.classList.remove("d-none"));
                    artistNewFields.forEach((e) => {
                        e.disabled = false;
                        e.required = true;
                    });
                } else {
                    artistNewContainers.forEach((e) => {
                        if (!e.classList.contains("d-none")) {
                            e.classList.add("d-none");
                        }
                    });
                    artistNewFields.forEach((e) => {
                        e.disabled = true;
                        e.required = false;
                    });
                }
            }

            handleAlbumSelect();
            handleArtistSelect();

            albumSelect.addEventListener("change", () => {
                handleAlbumSelect();
            });

            artistSelect.addEventListener("change", () => {
                handleArtistSelect();
            });
        </script>
    </body>
</html>
